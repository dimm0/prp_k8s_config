# apiVersion: v1
# kind: Secret
# metadata:
#   name: dhub
#   namespace: digital-humanities
# data:
#   id: ""
#   secret: ""
#   callback: "aHR0cHM6Ly9kaHViLm5hdXRpbHVzLm9wdGlwdXRlci5uZXQvaHViL29hdXRoX2NhbGxiYWNr"
# ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: datavol
  namespace: digital-humanities
spec:
  storageClassName: rook-block
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 512Gi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: dhub
  namespace: digital-humanities
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: dhub
    spec:
      containers:
      - name: dhub
        #image: us.gcr.io/prp-k8s/dhub
        image: gateway.calit2.optiputer.net:5000/prp-k8s/dhub
        imagePullPolicy: Always
        args: ["jupyterhub", "-f", "/config/jupyterhub_config.py"]
        env:
          - name: CILOGON_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: dhub
                key: id
          - name: CILOGON_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: dhub
                key: secret
          - name: OAUTH_CALLBACK_URL
            valueFrom:
              secretKeyRef:
                name: dhub
                key: callback
        resources:
          limits:
            memory: "12Gi"
            nvidia.com/gpu: 2
        volumeMounts:
        - name: datavol
          mountPath: /datavol
        - name: config-volume
          mountPath: /config
        - name: nfs
          mountPath: /nfs
      volumes:
      - name: datavol
        persistentVolumeClaim:
          claimName: datavol
      - name: config-volume
        configMap:
          name: jupyterhub-config
      - name: nfs
        nfs:
          server: 10.109.206.102
          path: "/"
---
apiVersion: v1
kind: Service
metadata:
  name: dhub
  namespace: digital-humanities
  labels:
    k8s-app: dhub
spec:
  ports:
  - port: 8000
  selector:
    k8s-app: dhub
