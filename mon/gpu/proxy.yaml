apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: gpu-scrap-proxy
  namespace: monitoring
  labels:
    k8s-app: gpu-scrap-proxy
spec:
  selector:
    matchLabels:
      k8s-app: gpu-scrap-proxy
  namespaceSelector:
    matchNames:
    - default
  endpoints:
  - port: web            # works for different port numbers as long as the name matches
    interval: 10s        # scrape the endpoint every 10 seconds
    path: /metrics
---
apiVersion: v1
kind: Service
metadata:
  name: gpu-scrap-proxy
  namespace: default
  labels:
    k8s-app: gpu-scrap-proxy
spec:
  type: NodePort
  selector:
    k8s-app: gpu-scrap-proxy
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 38080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-cfg
  namespace: default
data:
  default.conf: |
    server {
        listen       38080;
        server_name  localhost;

        location /metrics {
          proxy_pass http://localhost:9200;
        }

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: gpu-scrap-proxy
  name: gpu-scrap-proxy
  namespace: default
spec:
  template:
    metadata:
      name: gpu-scrap-proxy
      labels:
        k8s-app: gpu-scrap-proxy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-gpu-01.calit2.optiputer.net
                - k8s-gpu-02.calit2.optiputer.net
                - k8s-gpu-03.calit2.optiputer.net
      hostNetwork: true
      containers:
      - name: proxy
        image: nginx
        volumeMounts:
        - name: "nginx-cfg"
          mountPath: "/etc/nginx/conf.d"
        ports:
        - containerPort: 38080
          protocol: TCP
      volumes:
      - name: nginx-cfg
        configMap:
          name: nginx-cfg
