kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-proxy-config
  namespace: rocketchat
data:
  nginx.conf: |-
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {

      listen 443;

      ssl_certificate           /cert/tls.crt;
      ssl_certificate_key       /cert/tls.key;

      ssl on;
      ssl_session_cache  builtin:1000  shared:SSL:10m;
      ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;

      location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forward-Proto http;
        proxy_set_header X-Nginx-Proxy true;

        proxy_redirect off;

        proxy_pass          http://localhost:3000;      }

    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rocketchat
  namespace: rocketchat
spec:
  template:
    metadata:
      labels:
        k8s-app: rocketchat
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: env
                operator: In
                values:
                - production
      containers:
      - name: rocketchat-app
        image: rocketchat/rocket.chat:latest
        env:
        - name: ROOT_URL
          value: "https://rocket.nautilus.optiputer.net"
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: connectstring
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: password
        - name: MONGODB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: database
      - image: nginx
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: conf
        - mountPath: /cert
          name: ssl-key
        ports:
          - name: https
            containerPort: 443
      volumes:
      - name: ssl-key
        secret:
          secretName: rocketchat-tls
      - name: conf
        configMap:
          name: nginx-proxy-config
---
apiVersion: v1
kind: Service
metadata:
  name: rocketchat
  namespace: rocketchat
  labels:
    k8s-app: rocketchat
spec:
  ports:
  - port: 443
  selector:
    k8s-app: rocketchat
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rocketchat
  namespace: rocketchat
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: rocket.nautilus.optiputer.net
    http:
      paths:
      - path: /
        backend:
          serviceName: rocketchat
          servicePort: 443
